<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.001">
	<TriggerPackage>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Interrupted inking</name>
			<script>svo.ti_interrupted()</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>As the inking process is ruined, the ink dissipates into the surrounding air.</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>3</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Lacking inks</name>
			<script>svo.ti_cantink("inks")</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>You do not possess the ink that is required to create a</string>
				<string>^You do not possess the ink that is required to create a \w+ tattoo\.$</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>2</integer>
				<integer>1</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Lacking skills</name>
			<script>svo.ti_cantink("skill")</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>You do not know how to ink</string>
				<string>^You do not know how to ink an? \w+ tattoo\.$</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>2</integer>
				<integer>1</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Lacking spot</name>
			<script>svo.ti_cantink("space")</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>That person has no space for a new tattoo.</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>3</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Finished inking the tattoo</name>
			<script>svo.ti_finishedinking()</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>As the </string>
				<string>^As the \w+ tattoo's shape is codified on the .+ of \w+, the last of the ink leaves the air and you pause for a moment to admire your handiwork\.$</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>2</integer>
				<integer>1</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Maya Card - Finished inking you</name>
			<script>svo.ti_finishedinking()</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>You impulsively scribe a</string>
				<string>tattoo onto your .+ with surprising dexterity\.$</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>2</integer>
				<integer>1</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Maya Card - Finished other inking</name>
			<script>svo.ti_finishedinking()
</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>You expertly scribe a</string>
				<string>tattoo onto an impulsive \w+'s .+ with surprising dexterity\.$</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>2</integer>
				<integer>1</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Inked on stencil</name>
			<script>svo.ti_finishedinking(true)</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>You gather up the necessary inks and crush the pellets over the stencil. The inks hang in the air for a moment as you concentrate, forming them into the shape of a</string>
				<string>tattoo that adheres to the waxy surface\.$</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>2</integer>
				<integer>1</integer>
			</regexCodePropertyList>
		</Trigger>
	</TriggerPackage>
	<TimerPackage />
	<AliasPackage>
		<Alias isActive="yes" isFolder="no">
			<name>Ink</name>
			<script>svo.ti_ink(matches[2])</script>
			<command></command>
			<packageName></packageName>
			<regex>^ink (.+)$</regex>
		</Alias>
	</AliasPackage>
	<ActionPackage />
	<ScriptPackage>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>svo Inker</name>
			<packageName></packageName>
			<script>function inkerPrio(_, module)
  if module ~= "svo (inker)" then return true end
  tempTimer(0, [[setModulePriority("]]..module..[[", 0)]])
end

registerAnonymousEventHandler("sysInstall", "inkerPrio",true)
svo = svo or {}; svo.loader = svo.loader or {}
svo.modules_version = svo.modules_version or {}
svo.modules_version["svo (inker)"] = 2.0</script>
			<eventHandlerList />
			<Script isActive="yes" isFolder="no">
				<name>inker code</name>
				<packageName></packageName>
				<script>-- Svof (c) 2011-2018 by Vadim Peretokin

-- Svof is licensed under a
-- Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.

-- You should have received a copy of the license along with this
-- work. If not, see &lt;http://creativecommons.org/licenses/by-nc-sa/4.0/&gt;.


svo.loader.inker = function()
  local firstload = not svo.inkerLoaded    
  local tattoos = {
      firefly = {{1,'yewllowink'},},
      moss = {{1,'blueink'},{1,'redink'},{1,'yellowink'},},
      feather = {{2,'blueink'},{1,'redink'},},
      shield = {{1,'greenink'},{2,'redink'},},
      mindseye = {{2,'blueink'},{1,'greenink'},},
      hammer = {{1,'purpleink'},{2,'redink'},},
      cloak = {{3,'blueink'},},
      bell = {{3,'blueink'},{2,'redink'},},
      crystal = {{1,'greenink'},{1,'purpleink'},{1,'yellowink'},},
      moon = {{1,'blueink'},{1,'redink'},{1,'yellowink'},},
      starburst = {{1,'blueink'},{1,'goldink'},{1,'greenink'},{1,'purpleink'},{1,'redink'},{1,'yellowink'},},
      boar = {{1,'purpleink'},{2,'redink'},},
      web = {{1,'greenink'},{1,'yellowink'},},
      tentacle = {{2,'greenink'},{1,'purpleink'},},
      hourglass = {{1,'blueink'},{2,'yellowink'},},
      brazier = {{2,'redink'},{2,'yellowink'},},
      prism = {{1,'blueink'},{1,'greenink'},{1,'purpleink'},{1,'redink'},{1,'yellowink'},},
      tree = {{5,'greenink'},},
      megalith = {{2,'goldink'},},
      ox = {{1,'goldink'},{1,'redink'},{1,'yellowink'},{1,'blueink'},},
      chameleon = {{1,'goldink'},{1,'purpleink'},{1,'yellowink'},},
      talon = {{20,'blackink'},},
      }
  local tattoo_order = {'firefly','moss','feather','shield','mindseye','hammer','cloak','bell',
     'crystal','moon','starburst','boar','web','tentacle','hourglass','brazier','prism','tree',
     'megalith','ox','chameleon','talon',} -- this is the order they are in in the AB file
  
  function svo.ti_printTable() -- function to print above table nicely.
    for k,v in pairs(tattoo_order) do 
      echo(string.format("\n    %s = {", v))
      for x,y in pairs(tattoos[v]) do echo(string.format("{%s,'%s'},",y[1],y[2])) end
      echo("},")
    end
  end
  
  svo.ti_inking = false
  
  -- if ends with 'on person' or 'of person', then it's on a person!
  function svo.ti_ink(order)
    local anotherperson = order:match(" on (%w+)$")
    if anotherperson then order = order:sub(1, #order-#anotherperson-4) end
    local tattoosorder = string.split(order, ",")
    for i = 1, #tattoosorder do tattoosorder[i] = string.trim(tattoosorder[i]) end
  
    svo.ti_inking = {on = anotherperson or 'me', tattoos = tattoosorder, tattoo_counter = 1}
    svo.echof("Going to ink %s on %s.", svo.concatand(svo.ti_inking.tattoos), svo.ti_inking.on)
    svo.showprompt() echo"\n"
    svo.app('on')
    
    svo.ti_inknext()
  end

  local function doneinking()
      local touchables = {'moss', 'moon', 'boar', 'megalith', 'ox',}
      local needtotouch = {}
      for i = 1, svo.ti_inking.tattoo_counter do
        if table.contains(touchables, svo.ti_inking.tattoos[i]) then needtotouch[#needtotouch+1] = svo.ti_inking.tattoos[i] end
      end
      if #needtotouch &gt; 0 then
        if svo.ti_inking.on ~= 'me' and svo.ti_inking.on ~= 'stencil' then
          if svo.conf.telltouch then send(string.format("tell %s you should now touch your %s tattoo%s", svo.ti_inking.on, svo.concatand(needtotouch), (#needtotouch == 1 and "" or 's'))) end
        elseif svo.ti_inking.on == 'me' then
          for k,v in pairs(needtotouch) do 
            svo.doadd("touch " .. v ,false)
          end
        end
      end
      echo'\n'
      if #svo.ti_inking.tattoos &gt; 0 then
        svo.echof("Finished inking " .. svo.concatand(svo.ti_inking.tattoos) .. " tattoo(s).")
      else
        svo.echof("No tattoos were inked!")
      end
      svo.ti_inking = nil
      svo.app('off')
      svo.showprompt()
  end
  

  function svo.ti_finishedinking(stencil)
    if not svo.ti_inking then return end
    svo.ti_inking.tattoo_counter = svo.ti_inking.tattoo_counter + 1
    if not svo.ti_inking.tattoos[svo.ti_inking.tattoo_counter] then
      doneinking()
    else
      echo("\n")
      svo.echof("Inking the next tattoo...")
      svo.ti_inknext(stencil)
    end   
  end
  
  function svo.ti_cancelinking()
    if not svo.ti_inking then return end
    for i=svo.ti_inking.tattoo_counter,#svo.ti_inking.tattoos do -- remove tattoos we didn't ink from here to the end
      table.remove(svo.ti_inking.tattoos,svo.ti_inking.tattoo_counter) -- so we won't try to touch them
    end
    if reink then killTimer(reink) reink = nil end
    if svo.ti_inking.on == "stencil" then send("clearqueue all",false) end
    doneinking()
  end
  
  function svo.ti_inknext(stencil)
    if not tattoos[svo.ti_inking.tattoos[svo.ti_inking.tattoo_counter]] then -- We don't have any info about this tattoo
      svo.echof("Don't know anything about a %s tattoo.", svo.ti_inking.tattoos[svo.ti_inking.tattoo_counter])
      svo.showprompt()
      if not svo.ti_inking.tattoos[svo.ti_inking.tattoo_counter + 1] then --no more tattoos, done
        doneinking()
        return
      else
        svo.ti_inking.tattoo_counter = svo.ti_inking.tattoo_counter + 1 --skip this tattoo
        svo.ti_inknext(stencil)
        return
      end
    end
    if not stencil then
      svo.sendc(string.format("ink %s on %s", svo.ti_inking.tattoos[svo.ti_inking.tattoo_counter], svo.ti_inking.on))
    else
      svo.sendc(string.format("queue add eqbal ink %s on %s", svo.ti_inking.tattoos[svo.ti_inking.tattoo_counter], svo.ti_inking.on))
    end
  end
  
  function svo.ti_interrupted()
    if not svo.ti_inking then return end
    if svo.ti_inking.on == 'me' then
      echo"\n" svo.echofn("Be still! Going to ink again in a few... ")
      cechoLink("&lt;red&gt;(CANCEL)","svo.ti_cancelinking()","Cancel inking",true)
    else
      send(string.format("tell %s Be still while I ink you!", svo.ti_inking.on))
      echo'\n' cechoLink("&lt;red&gt;(CANCEL)","svo.ti_cancelinking()","Cancel inking",true)
    end
    reink = tempTimer(5, function() svo.ti_inknext() reink = nil end)
  end
  
  function svo.ti_cantink(why)
    echo("\n") svo.echof("Lacking the %s for the %s tattoo...", why, svo.ti_inking.tattoos[svo.ti_inking.tattoo_counter])
    if not svo.ti_inking.tattoos[svo.ti_inking.tattoo_counter + 1] or why == "space" then
      for i=svo.ti_inking.tattoo_counter,#svo.ti_inking.tattoos do -- remove tattoos we didn't ink from here to the end
        table.remove(svo.ti_inking.tattoos,svo.ti_inking.tattoo_counter) -- so we won't try to touch them
      end
      doneinking()
    else
      table.remove(svo.ti_inking.tattoos,svo.ti_inking.tattoo_counter) -- remove just this tattoo, we didn't do it
      svo.ti_inknext()
    end
  end
  
  svo.config.setoption('telltouch',
  {
    type = 'boolean',
    vconfig2string = true,
    onshow = function (defaultcolour)
      fg('gold')
      echoLink("ti:", "", "svo Tattoo Inker", true)
      -- &lt;Tell/Don't tell&gt; people to touch inked tattoos
      if svo.conf.telltouch then
        fg('a_cyan') echoLink(" Will tell", "svo.config.set('telltouch', false, true)", "Click to stop telling people to touch their newly-inked tattoos", true)
      else
        fg('a_cyan') echoLink(" Won't tell", "svo.config.set('telltouch', true, true)", "Click to start telling people to touch their newly-inked tattoos", true)
      end
      fg(defaultcolour) echo(" people to touch inked tattoos")
      echo(".\n")
    end,
    onenabled = function ()
      svo.echof("&lt;0,250,0&gt;Will%s tell people to touch tattoos they need to after inking.", svo.getDefaultColor())
    end,
    ondisabled = function () svo.echof("&lt;250,0,0&gt;Won't%s tell people to touch tattoos they need to after inking.", svo.getDefaultColor()) end
  })
  svo.inkerLoaded = true 
  if firstload then
    svo.echof("Loaded svo Tattoo Inker, version %s.", tostring(svo.modules_version["svo (inker)"]))
  end
end -- end loader

if svo.systemloaded then svo.loader.inker() end</script>
				<eventHandlerList />
			</Script>
		</ScriptGroup>
	</ScriptPackage>
	<KeyPackage />
	<HelpPackage>
		<helpURL>https://svof.github.io/svof/inker.html</helpURL>
	</HelpPackage>
</MudletPackage>
