<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.001">
	<TriggerPackage>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Spot not available</name>
			<script>svo.ti_cantink(multimatches[2][2])</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>You cannot hold any more tattoos on your</string>
				<string>^You cannot hold any more tattoos on your (.+)\.$</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>2</integer>
				<integer>1</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>No back</name>
			<script>svo.ti_cantink("back")</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>You cannot ink the tattoo on that!</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>3</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>No spot available on someone else</name>
			<script>svo.ti_cantink(matches[2])</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>99</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>cannot hold any more tattoos on (?:his|her) (.+)\.$</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>1</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Finished inking the tattoo</name>
			<script>svo.ti_finishedinking()</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>As the </string>
				<string>^As the \w+ tattoo's shape is codified on the .+ of yourself, the last of the ink leaves the air and you pause for a moment to admire your handiwork\.$</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>2</integer>
				<integer>1</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Interrupted inking</name>
			<script>svo.ti_interrupted()</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>As the inking process is ruined, the ink dissipates into the surrounding air.</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>3</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Lacking inks</name>
			<script>svo.ti_noinks()</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>You do not possess the ink that is required to create a</string>
				<string>^You do not possess the ink that is required to create a \w+ tattoo\.</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>2</integer>
				<integer>1</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Lacking skills</name>
			<script>svo.ti_noinks()</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>You do not know how to ink</string>
				<string>^You do not know how to ink an? \w+ tattoo\.$</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>2</integer>
				<integer>1</integer>
			</regexCodePropertyList>
		</Trigger>
	</TriggerPackage>
	<TimerPackage />
	<AliasPackage>
		<Alias isActive="yes" isFolder="no">
			<name>Ink</name>
			<script>svo.ti_ink(matches[2])</script>
			<command></command>
			<packageName></packageName>
			<regex>^ink (.+)$</regex>
		</Alias>
	</AliasPackage>
	<ActionPackage />
	<ScriptPackage>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>svo Inker</name>
			<packageName></packageName>
			<script>function inkerPrio(_, module)
  if module ~= "svo (inker)" then return end
  setModulePriority(module, 1)
end

registerAnonymousEventHandler("sysInstall", "inkerPrio")

svo.modules_version = svo.modules_version or {}
svo.modules_version["svo (inker)"] = 1.2</script>
			<eventHandlerList />
			<Script isActive="yes" isFolder="no">
				<name>inker code</name>
				<packageName></packageName>
				<script>-- Svof (c) 2011-2018 by Vadim Peretokin

-- Svof is licensed under a
-- Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.

-- You should have received a copy of the license along with this
-- work. If not, see &lt;http://creativecommons.org/licenses/by-nc-sa/4.0/&gt;.


tempTimer(0, function()
local firstload = not svo.inkerLoaded
svo.inkerLoaded = true 

local limb_order = {'head', 'torso', "right arm", "left arm", "right leg", "left leg", 'back'}
local tattoos = {
  ox = {
    {
      1,
      'goldink',
    },
    {
      1,
      'redink',
    },
    {
      1,
      'yellowink',
    },
    {
      1,
      'blueink',
    }
  },
  cloak = {
    {
      3,
      'blueink',
    }
  },
  firefly = {
    {
      1,
      'yellowink',
    }
  },
  bell = {
    {
      3,
      'blueink',
    },
    {
      2,
      'redink',
    }
  },
  moss = {
    {
      1,
      'blueink',
    },
    {
      1,
      'redink',
    },
    {
      1,
      'yellowink',
    }
  },
  prism = {
    {
      1,
      'blueink',
    },
    {
      1,
      'greenink',
    },
    {
      1,
      'purpleink',
    },
    {
      1,
      'redink',
    },
    {
      1,
      'yellowink',
    }
  },
  mindseye = {
    {
      2,
      'blueink',
    },
    {
      1,
      'greenink',
    }
  },
  brazier = {
    {
      2,
      'redink',
    },
    {
      2,
      'yellowink',
    }
  },
  feather = {
    {
      2,
      'blueink',
    },
    {
      1,
      'redink',
    }
  },
  moon = {
    {
      1,
      'blueink',
    },
    {
      1,
      'redink',
    },
    {
      1,
      'yellowink',
    }
  },
  starburst = {
    {
      1,
      'blueink',
    },
    {
      1,
      'goldink',
    },
    {
      1,
      'greenink',
    },
    {
      1,
      'purpleink',
    },
    {
      1,
      'redink',
    },
    {
      1,
      'yellowink',
    }
  },
  chameleon = {
    {
      1,
      'goldink',
    },
    {
      1,
      'purpleink',
    },
    {
      1,
      'yellowink',
    }
  },
  crystal = {
    {
      1,
      'greenink',
    },
    {
      1,
      'purpleink',
    },
    {
      1,
      'yellowink',
    }
  },
  megalith = {
    {
      2,
      'goldink',
    }
  },
  tree = {
    {
      5,
      'greenink',
    }
  },
  hourglass = {
    {
      1,
      'blueink',
    },
    {
      2,
      'yellowink',
    }
  },
  hammer = {
    {
      1,
      'purpleink',
    },
    {
      2,
      'redink',
    }
  },
  tentacle = {
    {
      2,
      'greenink',
    },
    {
      1,
      'purpleink',
    }
  },
  web = {
    {
      1,
      'greenink',
    },
    {
      1,
      'yellowink',
    }
  },
  boar = {
    {
      1,
      'purpleink',
    },
    {
      2,
      'redink',
    }
  },
  shield = {
    {
      1,
      'greenink',
    },
    {
      2,
      'redink',
    }
  }
}

svo.ti_inking = false

-- if ends with 'on person', then it's on a person!
function svo.ti_ink(order)
  local anotherperson = order:match(" on (%w+)$")
  if anotherperson then order = order:sub(1, #order-#anotherperson-4) end
  local tattoosorder = string.split(order, ",")
  for i = 1, #tattoosorder do tattoosorder[i] = string.trim(tattoosorder[i]) end

  svo.ti_inking = {on = anotherperson or 'me', tattoos = tattoosorder, ink_counter = 1, tattoo_counter = 1}
  svo.echof("Going to ink %s on %s.", svo.concatand(svo.ti_inking.tattoos), svo.ti_inking.on)
  svo.showprompt() echo"\n"
  svo.app('on')

  svo.ti_inknext()
end

local function doneinking()
    local touchables = {'moss', 'moon', 'boar', 'megalith', 'ox'}
    local needtotouch = {}
    for i = 1, svo.ti_inking.tattoo_counter do
      if table.contains(touchables, svo.ti_inking.tattoos[i]) then needtotouch[#needtotouch+1] = svo.ti_inking.tattoos[i] end
    end
    if #needtotouch &gt; 0 then
      if svo.ti_inking.on ~= 'me' then
        if svo.conf.telltouch then send(string.format("say to %s you should now touch your %s tattoo%s", svo.ti_inking.on, svo.concatand(needtotouch), (#needtotouch == 1 and "" or 's'))) end
      end
    end

    svo.ti_inking = nil
    echo("\n")
    svo.app('off')
    svo.echof("Finished inking all tattoos.")
end

function svo.ti_cantink(limb)
  if not svo.ti_inking then return end
  if limb == limb_order[#limb_order] then
    echo("\n")
    svo.echof("No more inking spots on %s :|", (svo.ti_inking.on == 'me' and 'you' or svo.ti_inking.on))
    svo.showprompt()
    doneinking()
  else
    svo.ti_inking.ink_counter = svo.ti_inking.ink_counter + 1
    svo.ti_inknext()
  end
end

function svo.ti_finishedinking()
  if not svo.ti_inking then return end

  if table.contains({'moss', 'moon', 'boar', 'megalith', 'ox'}, svo.ti_inking.tattoos[svo.ti_inking.tattoo_counter]) then
    send("touch "..svo.ti_inking.tattoos[svo.ti_inking.tattoo_counter])
  end

  svo.ti_inking.tattoo_counter = svo.ti_inking.tattoo_counter + 1

  if not svo.ti_inking.tattoos[svo.ti_inking.tattoo_counter] then
    doneinking()
  else
    svo.ti_inking.ink_counter = 1
    echo("\n")
    svo.echof("Inking the next tattoo...")
    svo.ti_inknext()
  end
end

function svo.ti_inknext()
  if svo.ti_inking.ink_counter == 1 and not tattoos[svo.ti_inking.tattoos[svo.ti_inking.tattoo_counter]] then
    svo.echof("Don't know the inks necessary for a %s tattoo.", svo.ti_inking.tattoos[svo.ti_inking.tattoo_counter])
    svo.showprompt()
  end

  svo.sendc(string.format("ink %s on %s of %s", svo.ti_inking.tattoos[svo.ti_inking.tattoo_counter], limb_order[svo.ti_inking.ink_counter], svo.ti_inking.on))
end

function svo.ti_interrupted()
  if not svo.ti_inking then return end

  svo.ti_inking.ink_counter = 1
  if svo.ti_inking.on == 'me' then
    echo"\n" svo.echof("Be still! Going to ink again in a few...")
  else
    send(string.format("say to %s be still!", svo.ti_inking.on))
  end
  tempTimer(2, function() svo.ti_inknext() end)
end

function svo.ti_noinks()
  echo("\n") svo.echof("Lacking inks for the %s tattoo...", svo.ti_inking.tattoos[svo.ti_inking.tattoo_counter])
  if not svo.ti_inking.tattoos[svo.ti_inking.tattoo_counter + 1] then
    doneinking()
  else
    svo.ti_inking.tattoo_counter = svo.ti_inking.tattoo_counter + 1
    svo.ti_inknext()
  end
end

svo.config.setoption('telltouch',
{
  type = 'boolean',
  vconfig2string = true,
  onshow = function (defaultcolour)
    fg('gold')
    echoLink("ti:", "", "svo Tattoo Inker", true)
    -- &lt;Tell/Don't tell&gt; people to touch inked tattoos
    if svo.conf.telltouch then
      fg('a_cyan') echoLink(" Will tell", "svo.config.set('telltouch', false, true)", "Click to stop telling people to touch their newly-inked tattoos", true)
    else
      fg('a_cyan') echoLink(" Won't tell", "svo.config.set('telltouch', true, true)", "Click to start telling people to touch their newly-inked tattoos", true)
    end
    fg(defaultcolour) echo(" people to touch inked tattoos")
    echo(".\n")
  end,
  onenabled = function ()
    svo.echof("&lt;0,250,0&gt;Will%s tell people to touch tattoos they need to after inking.", svo.getDefaultColor())
  end,
  ondisabled = function () svo.echof("&lt;250,0,0&gt;Won't%s tell people to touch tattoos they need to after inking.", svo.getDefaultColor()) end
})

if firstload then
  svo.echof("Loaded svo Tattoo Inker, version %s.", tostring(svo.modules_version["svo (inker)"]))
end

end)</script>
				<eventHandlerList />
			</Script>
		</ScriptGroup>
	</ScriptPackage>
	<KeyPackage />
	<HelpPackage>
		<helpURL></helpURL>
	</HelpPackage>
</MudletPackage>
