<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.001">
	<TriggerPackage>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Stuff has boiled</name>
			<script>svo.rf_magichappened()</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>You place your ingredients into</string>
				<string>You place your reactants into the large container of </string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>2</integer>
				<integer>2</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Filled a vial</name>
			<script>svo.rf_fillnext()</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>You slowly pour the liquid from</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>2</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Stop refilling</name>
			<script>svo.rf_nextpotion()</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>You do not possess an empty.</string>
				<string>^You cannot .+ (?:pot|alembic) with that\.$</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>3</integer>
				<integer>1</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Missing ingredients</name>
			<script>svo.rf_missingstuff()</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>^You lack the required ingredients to (brew|compound) that\.$</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>1</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Putting vials away</name>
			<script>if not svo.putvials then return end
svo.doadd("put 50 vial in "..(svo.conf.packid or 'pack'))</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>1</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>You put</string>
				<string></string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>2</integer>
				<integer>7</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Done with putvials</name>
			<script>if not svo.putvials then return end

svo.putvials = nil
echo'\n' svo.echof("Done stuffing away vials - they can give theirs now.")</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>You hold no more of that item.</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>3</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Getting vials back</name>
			<script>if not svo.getvials then return end
svo.doadd("get 50 vial from "..(svo.conf.packid or 'pack'))</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>1</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>You take</string>
				<string></string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>2</integer>
				<integer>7</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Done with getvials</name>
			<script>if not svo.getvials then return end

svo.getvials = nil
echo'\n' svo.echof("Retrieved all of your vials back.")</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>There are no more </string>
				<string>doesn't contain that</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>2</integer>
				<integer>0</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Giving vials away</name>
			<script>svo.doadd("give 50 vial to "..svo.givevials.person)</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>1</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>You give</string>
				<string>return isPrompt() and svo.givevials</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>2</integer>
				<integer>4</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Done with givevials</name>
			<script>if not svo.givevials then return end

if svo.givevials.selfish then
  svo.defs.keepup("selfishness", true)
end

svo.givevials = nil
echo'\n' svo.echof("Handed all vials over.")</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>You hold no more of that item.</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>3</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>There's something wrong there</name>
			<script>svo.rf_cancel()</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>That pot already contains a</string>
				<string>That alembic already contains a</string>
				<string>That is not an alembic.</string>
				<string>That is not a pot.</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>2</integer>
				<integer>2</integer>
				<integer>3</integer>
				<integer>3</integer>
			</regexCodePropertyList>
		</Trigger>
	</TriggerPackage>
	<TimerPackage />
	<AliasPackage>
		<Alias isActive="yes" isFolder="no">
			<name>Refill something</name>
			<script>-- example: compound/brew 5 health, 3 restoration
if command:find("brew %d+ %w+ in %w+") then send(command, false) return end
if command:find("compound %d+ %w+ in %w+") then send(command, false) return end

if matches[3] == 'cancel' then svo.rf_cancel() svo.showprompt() echo'\n' return end
svo.rf_refill(matches[2], matches[3])</script>
			<command></command>
			<packageName></packageName>
			<regex>^(compound|brew) (.+)$</regex>
		</Alias>
		<Alias isActive="yes" isFolder="no">
			<name>Refill next potion</name>
			<script>-- this alias is only for the refiller to do the next potion a failed fill (when you didn't have enough herbs)
svo.rf_nextpotion()</script>
			<command></command>
			<packageName></packageName>
			<regex>^refill next potion$</regex>
		</Alias>
		<Alias isActive="yes" isFolder="no">
			<name>(putvials) Put vials away</name>
			<script>svo.putvials = true
svo.doadd("put 50 vial in "..(svo.conf.packid or 'pack'))</script>
			<command></command>
			<packageName></packageName>
			<regex>^putvials$</regex>
		</Alias>
		<Alias isActive="yes" isFolder="no">
			<name>(getvials) Retrieve vials</name>
			<script>svo.getvials = true
svo.doadd("get 50 vial from "..(svo.conf.packid or 'pack'))</script>
			<command></command>
			<packageName></packageName>
			<regex>^getvials$</regex>
		</Alias>
		<Alias isActive="yes" isFolder="no">
			<name>(givevials) Hand over vials</name>
			<script>svo.givevials = {person = matches[2]}

if svo.defkeepup[svo.defs.mode].selfishness then
  svo.defs.keepup("selfishness", false)
  svo.givevials.selfish = true
end

svo.doadd("give 50 vial to "..svo.givevials.person)</script>
			<command></command>
			<packageName></packageName>
			<regex>^givevials (\w+)$</regex>
		</Alias>
	</AliasPackage>
	<ActionPackage />
	<ScriptPackage>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>svo Refiller</name>
			<packageName></packageName>
			<script>function refillerPrio(_, module)
  if module ~= "svo (refiller)" then return true end
  tempTimer(0, [[setModulePriority("]]..module..[[", 1)]])
end

registerAnonymousEventHandler("sysInstall", "refillerPrio", true)

svo = svo or {}
svo.modules_version = svo.modules_version or {}
svo.modules_version["svo (refiller)"] = 1</script>
			<eventHandlerList />
			<Script isActive="yes" isFolder="no">
				<name>refiller code</name>
				<packageName></packageName>
				<script>-- Svof (c) 2011-2020 by Vadim Peretokin

-- Svof is licensed under a
-- Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.

-- You should have received a copy of the license along with this
-- work. If not, see &lt;http://creativecommons.org/licenses/by-nc-sa/4.0/&gt;.

tempTimer(0, function()

local conf = svo.conf

svo.rf_debug = false
-- format: {p = {potion = #, currentorder = ""}
-- this stores the total order that we need to do
svo.rf_refilling = svo.rf_refilling or false

-- format: 'potion'
-- this stores the current potion that we're doing of the whole order

-- need a variable to handle either remedies or toxicology transcendence
svo.rf_currenttrans = svo.rf_currenttrans or false

-- a variable to handle whether the user wants to brew or compound
svo.rf_refillaction = svo.rf_refillaction or false

conf.potid = conf.potid or 'pot'
svo.config.setoption('potid', {
  type = 'string',
  vconfig2string = true,
  onshow = function (defaultcolour)
    fg('gold')
    echoLink("refiller: ", "", "svo Refiller", true)
    fg(defaultcolour) echo("Pot/Alembic to use is ")
    fg('a_cyan') echoLink((conf.potid or 'pot'), "printCmdLine 'vconfig potid pot###'", "Click to set the pot/alembic ID to use for brewing/compounding in", true)
    fg(defaultcolour) echo("; storing your vials in")
    fg('a_cyan') echoLink(" "..(conf.packid or 'pack'), "printCmdLine'vconfig packid '", "Click to set the pack ID to stuff your vials into when you do 'putvials'", true)
    fg(defaultcolour) echo(".\n")
  end,
  onset = function ()
    svo.echof("Okay, will brew/compound in the %s item.", conf.potid)
  end
})

conf.packid = conf.packid or 'pack'
svo.config.setoption('packid', {
  type = 'string',
  onset = function ()
    svo.echof("Okay, will store vials in %s when you do 'putvials'. Doing 'getvials' will get them back out.", conf.packid)
  end
})

local concoctions = {
  epidermal = true,
  immunity = true,
  mana = true,
  health = true,
  venom = true,
  frost = true,
  levitation = true,
  mending = true,
  mass = true,
  speed = true,
  restoration = true,
  caloric = true,
}

local toxins = {
  xentio = true,
  oleander = true,
  eurypteria = true,
  kalmia = true,
  digitalis = true,
  darkshade = true,
  curare = true,
  epteth = true,
  prefarar = true,
  monkshood = true,
  euphorbia = true,
  colocasia = true,
  oculus = true,
  vernalius = true,
  epseth = true,
  larkspur = true,
  slike = true,
  voyria = true,
  delphinium = true,
  vardrax = true,
  loki = true,
  aconite = true,
  selarnia = true,
  gecko = true
}

function svo.rf_brewpot()
  local max = (svo.rf_currenttrans and 12 or 10)
  local pot = conf.potid
  if pot == "pot" and svo.rf_refillaction == "compound" then pot = "alembic" end
  if svo.rf_refilling.currentorder == 'restoration' and svo.rf_refillaction == 'brew' then
    local gold = 40 * math.min(svo.rf_refilling.currentorderdata,max) * (svo.rf_currenttrans and 4 or 5)
    svo.sendc("get "..gold.." money from "..conf.packid, svo.rf_debug)
  end
  svo.sendc(svo.rf_refillaction.. " ".. (svo.rf_currenttrans and 4 or 5) * math.min(svo.rf_refilling.currentorderdata,max) .. " " ..tostring(svo.rf_refilling.currentorder) .. " in "..pot, svo.rf_debug)
end

function svo.rf_magichappened()
  if not svo.rf_refilling then return end
  svo.doadd(function()
    local max = (svo.rf_currenttrans and 12 or 10)
    if svo.rf_refilling.currentorderdata then
      for _ = 1, math.min(svo.rf_refilling.currentorderdata, max) do
        svo.rf_fillnext()
      end
      if svo.rf_refilling.currentorderdata &lt;= max then
        svo.rf_refilling.currentorderdata = nil
      end
    end
    echo'\n' svo.rf_nextpotion()
  end)
end

function svo.rf_fillnext()
  local pot = conf.potid
  if pot == "pot" and svo.rf_refillaction == "compound" then pot = "alembic" end
  if not svo.rf_refilling then return end
  svo.sendc("pour ".. pot .. " in emptyvial", svo.rf_debug)
end

function svo.rf_cancel()
  svo.rf_refilling = nil
  svo.undoall()
  --no need for failsafe triggers when not using refiller
  disableTrigger("There's something wrong there")
  
  echo'\n' svo.echof("Cancelled refilling.")
end

function svo.rf_refill(action,what)
  svo.rf_refillaction = action
  what = what:split(",")
  svo.rf_refilling = { p = {}, currentorder = false, currentorderdata = false}
  for i = 1, #what do
    what[i] = what[i]:trim()
    local amount, potion
    if what[i]:find("^(%d+) (%w+)") then
      amount, potion = what[i]:match("^(%d+) (%w+)")
    elseif what[i]:find("^(%w+)") then
      amount, potion = 1, what[i]:match("^(%w+)")
    end
    
    if not concoctions[potion] and not toxins[potion] then
      svo.echof("Don't know what a '%s' is :|", tostring(potion))
    else
      svo.rf_refilling.p[potion] = tonumber(amount)
    end
  end
  if not next(svo.rf_refilling.p) then
    svo.rf_refilling = nil
    svo.echof("Don't have anything to refill, then :/")
    return
  end
  --enables failsafe triggers
  enableTrigger("There's something wrong there")
  
  svo.rf_previousorder = svo.deepcopy(svo.rf_refilling.p)
  svo.rf_nextpotion()
end


-- to be called only when we need to do the next potion
function svo.rf_nextpotion()
  -- if we're still in the process of making something
  local max
  if svo.rf_refilling.p[svo.rf_refilling.currentorder] then
  max = (svo.rf_currenttrans and 12 or 10)
    -- delete the max amount we're able to make per brewpot(), we already made it
    svo.rf_refilling.currentorderdata = svo.rf_refilling.currentorderdata - max
  end
  if not svo.rf_refilling.currentorderdata or svo.rf_refilling.currentorderdata &lt;= 0 then
    svo.rf_refilling.currentorder = next(svo.rf_refilling.p)
    svo.rf_refilling.currentorderdata = svo.rf_refilling.p[svo.rf_refilling.currentorder]
  end
  if not svo.rf_refilling.currentorder then
    svo.rf_refilling = nil
    --disables failsafe triggers as they are no longer needed when we finish everything
    disableTrigger("There's something wrong there")
    
    svo.echof("Done refilling!")
    raiseEvent("svo done refilling")
  else
    svo.echof("Going to work on refilling %s.", tostring(svo.rf_refilling.currentorder))

    -- change which trans to check based on what we're brewing
    if concoctions[svo.rf_refilling.currentorder] then
      svo.rf_currenttrans = svo.rf_transrefiller
    else
      svo.rf_currenttrans = svo.rf_transtoxicology
    end
    svo.rf_brewpot()
    -- if we have made all of the current item, then clear the fill so next time rf_nextpotion() is called, it is fine
    max = (svo.rf_currenttrans and 12 or 10)
    if svo.rf_refilling.currentorderdata &lt;= max then
      svo.rf_refilling.p[svo.rf_refilling.currentorder] = nil
      svo.rf_refilling.currentorder = nil
    end
  end
end

function svo.rf_missingstuff()
  disableTrigger("Missing ingredients"); tempTimer(2, function() enableTrigger("Missing ingredients") end)

  echo'\n' svo.echof("Ack, looks like you're out of enough ingredients. :(")
  svo.rf_cancel()
end

end)</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>svo.rf_check_trans</name>
				<packageName></packageName>
				<script>function svo.rf_check_trans()
  if not (gmcp and gmcp.Char and gmcp.Char.Skills and gmcp.Char.Skills.Groups) then return end

  svo.rf_transrefiller = false
  svo.rf_transtoxicology = false
  for _, t in pairs(gmcp.Char.Skills.Groups) do
    if t.name and (t.name == "Remedies") and t.rank and t.rank == "Transcendent" then
      svo.rf_transrefiller = true; break
    end
    if t.name and (t.name == "Toxicology") and t.rank and t.rank == "Transcendent" then
      svo.rf_transtoxicology = true;break
    end
  end
end</script>
				<eventHandlerList>
					<string>gmcp.Char.Skills</string>
				</eventHandlerList>
			</Script>
		</ScriptGroup>
	</ScriptPackage>
	<KeyPackage />
	<HelpPackage>
		<helpURL>https://svof.github.io/svof/refiller.html</helpURL>
	</HelpPackage>
</MudletPackage>
