<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.001">
    <TriggerPackage>
        <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
            <name>svo Priest limbcounter</name>
            <script></script>
            <triggerType>0</triggerType>
            <conditonLineDelta>0</conditonLineDelta>
            <mStayOpen>0</mStayOpen>
            <mCommand></mCommand>
            <packageName></packageName>
            <mFgColor>#ff0000</mFgColor>
            <mBgColor>#ffff00</mBgColor>
            <mSoundFile></mSoundFile>
            <colorTriggerFgColor>#000000</colorTriggerFgColor>
            <colorTriggerBgColor>#000000</colorTriggerBgColor>
            <regexCodeList/>
            <regexCodePropertyList/>
            <Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>svopl Don't register</name>
                <script>-- it's OK, the trigger is supposed to be off by default - and share the name with another
svo.pl_ignore()</script>
                <triggerType>0</triggerType>
                <conditonLineDelta>99</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList>
                    <string>^\w+ dodges nimbly out of the way\.$</string>
                    <string>^\w+ twists (?:his|her) body out of harm's way\.$</string>
                    <string>^\w+ parries the attack with a deft manoeuvre\.$</string>
                    <string>^\w+ steps into the attack, grabs your arm, and throws you violently to the ground\.$</string>
                    <string>^\w+ quickly jumps back, avoiding the attack\.$</string>
                    <string>^A chaos orb intercepts the attack against \w+ and renders it harmless\.$</string>
                    <string>The attack rebounds onto you!</string>
                    <string>^A reflection of \w+ blinks out of existence\.$</string>
                    <string>The attack rebounds back onto you!</string>
                    <string>^\w+ moves into your attack, knocking your blow aside before viciously countering with a strike to your head\.$</string>
                </regexCodeList>
                <regexCodePropertyList>
                    <integer>1</integer>
                    <integer>1</integer>
                    <integer>1</integer>
                    <integer>1</integer>
                    <integer>1</integer>
                    <integer>1</integer>
                    <integer>3</integer>
                    <integer>1</integer>
                    <integer>3</integer>
                    <integer>1</integer>
                </regexCodePropertyList>
            </Trigger>
            <Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>svopl Don't register</name>
                <script>-- it's OK, the trigger is supposed to be off by default - and share the name with another
svo.pl_smash()</script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList>
                    <string>It breaks with a satisfying 'CRACK'.</string>
                </regexCodeList>
                <regexCodePropertyList>
                    <integer>3</integer>
                </regexCodePropertyList>
            </Trigger>
            <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>Smite</name>
                <script>svo.pl_hit(multimatches[2][2], multimatches[2][3])</script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList>
                    <string>You utter a prayer and smite</string>
                    <string>^You utter a prayer and smite (\w+)'s (.+?) with .+\.$</string>
                </regexCodeList>
                <regexCodePropertyList>
                    <integer>2</integer>
                    <integer>1</integer>
                </regexCodePropertyList>
            </Trigger>
            <Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>Guesstimates</name>
                <script>-- disabled - need to have an accurate formula for this. It seems to depend on strength and mace damage.

local maxhp = tonumber(multimatches[2][2])

local hits

-- attempt to account for the limbbreak penalties and bonuses that exist
if maxhp &gt; 9000 then hits = 6
elseif maxhp &gt; 5000 then hits = 5
elseif maxhp &gt; 4000 then hits = 4
elseif maxhp &gt; 2000 then hits = 3
else hits = 2
end

echo&quot;\n&quot; svo.echof(&quot;My guess would be %d hits.&quot;, hits)</script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList>
                    <string>You glance over</string>
                    <string>^You glance over \w+ and see that (?:his|her) health is at \d+/(\d+)\.$</string>
                </regexCodeList>
                <regexCodePropertyList>
                    <integer>2</integer>
                    <integer>1</integer>
                </regexCodePropertyList>
            </Trigger>
        </TriggerGroup>
    </TriggerPackage>
    <TimerPackage/>
    <AliasPackage>
        <AliasGroup isActive="yes" isFolder="yes">
            <name>svo Priest limbcounter</name>
            <script></script>
            <command></command>
            <packageName></packageName>
            <regex></regex>
            <Alias isActive="yes" isFolder="no">
                <name>Reset</name>
                <script>svo.pl_reset(matches[2])</script>
                <command></command>
                <packageName></packageName>
                <regex>^nn ?(.+)?$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Check status</name>
                <script>if svo.pl_show then svo.pl_show() end</script>
                <command></command>
                <packageName></packageName>
                <regex>^vsl$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Set the hits needed</name>
                <script>local name = (matches[2] ~= &quot;&quot;) and matches[2] or nil
local hits = tonumber(matches[3])

svo.pl_sethitsneeded(name,hits)</script>
                <command></command>
                <packageName></packageName>
                <regex>^shn(?: (\w+))? ([\d.]+)$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Syncronize hits</name>
                <script>svo.pl_synchits()</script>
                <command></command>
                <packageName></packageName>
                <regex>^kk$</regex>
            </Alias>
        </AliasGroup>
    </AliasPackage>
    <ActionPackage/>
    <ScriptPackage>
        <ScriptGroup isActive="yes" isFolder="yes">
            <name>svo Priest limbcounter</name>
            <packageName></packageName>
            <script>-- limbcounters prompt tag is defined here
-- feel free to tinker with it, but move it out into a script of its own,
-- so your changes don't get erased on an update!
function svo.pl_prompttag2()
  if svo.defc.dragonform or not svo.lasthit or not svo.pl_list or not svo.pl_list[svo.lasthit] then return &quot;&quot; end
  local t = svo.pl_list[svo.lasthit]
  return string.format(&quot;%s: h %d|t %d|ra %d|la %d|rl %d|ll %d&quot;, svo.lasthit, t.head, t.torso, t.rightarm, t.leftarm, t.rightleg, t.leftleg)
end
svo.adddefinition(&quot;@pl_prompttag2&quot;, &quot;svo.pl_prompttag2()&quot;)



function svo.pl_prompttag()
  if svo.defc.dragonform or not svo.lasthit or not svo.pl_list or not svo.pl_list[svo.lasthit] then return &quot;&quot; end
  local t = svo.pl_list[svo.lasthit]
  local prep = 1
  return string.format(&quot;%s%d&lt;a_white&gt;/%s%d&lt;a_white&gt;|%s%d&lt;a_white&gt;/%s%d&lt;a_white&gt;|%s%d&lt;a_white&gt;/%s%d&lt;a_white&gt;|%d&quot;,
                   ((svo.pl_break_at - t.leftarm) &lt;= prep) and &quot;&lt;a_red&gt;&quot; or &quot;&lt;a_darkyellow&gt;&quot;, t.leftarm,
                   ((svo.pl_break_at - t.rightarm) &lt;= prep) and &quot;&lt;a_red&gt;&quot; or &quot;&lt;a_darkyellow&gt;&quot;, t.rightarm,
                   ((svo.pl_break_at - t.leftleg) &lt;= prep) and &quot;&lt;a_red&gt;&quot; or &quot;&lt;a_darkyellow&gt;&quot;, t.leftleg,
                   ((svo.pl_break_at - t.rightleg) &lt;= prep) and &quot;&lt;a_red&gt;&quot; or &quot;&lt;a_darkyellow&gt;&quot;, t.rightleg,
                   ((svo.pl_break_at - t.head) &lt;= prep) and &quot;&lt;a_red&gt;&quot; or &quot;&lt;a_darkyellow&gt;&quot;, t.head,
                   ((svo.pl_break_at - t.torso) &lt;= prep) and &quot;&lt;a_red&gt;&quot; or &quot;&lt;a_darkyellow&gt;&quot;, t.torso, svo.pl_break_at)
end
svo.adddefinition(&quot;@pl_prompttag&quot;, &quot;svo.pl_prompttag()&quot;)


function svo.pl_prompttag3()
  if svo.defc.dragonform or not svo.lasthit or not svo.pl_list or not svo.pl_list[svo.lasthit] then return &quot;&quot; end
  local t = svo.pl_list[svo.lasthit]
  local prep = 1
  return string.format(&quot;&lt;a_darkgrey&gt;(%s%d&lt;a_darkgrey&gt;:%s%d&lt;a_darkgrey&gt;:%s%d&lt;a_darkgrey&gt;:%s%d&lt;a_darkgrey&gt;:%s%d&lt;a_darkgrey&gt;:%s%d&lt;a_darkgrey&gt;:%d)&quot;,
                   ((svo.pl_break_at - t.leftarm) &lt;= prep) and &quot;&lt;a_red&gt;&quot; or &quot;&lt;a_darkyellow&gt;&quot;, t.leftarm,
                   ((svo.pl_break_at - t.rightarm) &lt;= prep) and &quot;&lt;a_red&gt;&quot; or &quot;&lt;a_darkyellow&gt;&quot;, t.rightarm,
                   ((svo.pl_break_at - t.leftleg) &lt;= prep) and &quot;&lt;a_red&gt;&quot; or &quot;&lt;a_darkyellow&gt;&quot;, t.leftleg,
                   ((svo.pl_break_at - t.rightleg) &lt;= prep) and &quot;&lt;a_red&gt;&quot; or &quot;&lt;a_darkyellow&gt;&quot;, t.rightleg,
                   ((svo.pl_break_at - t.head) &lt;= prep) and &quot;&lt;a_red&gt;&quot; or &quot;&lt;a_darkyellow&gt;&quot;, t.head,
                   ((svo.pl_break_at - t.torso) &lt;= prep) and &quot;&lt;a_red&gt;&quot; or &quot;&lt;a_darkyellow&gt;&quot;, t.torso, svo.pl_break_at)
end
svo.adddefinition(&quot;@pl_prompttag3&quot;, &quot;svo.pl_prompttag3()&quot;)</script>
            <eventHandlerList/>
        </ScriptGroup>
    </ScriptPackage>
    <KeyPackage/>
    <HelpPackage>
        <helpURL></helpURL>
    </HelpPackage>
</MudletPackage>
